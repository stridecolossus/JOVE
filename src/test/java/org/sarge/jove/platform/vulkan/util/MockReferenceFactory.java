package org.sarge.jove.platform.vulkan.util;

import static org.junit.jupiter.api.Assertions.assertEquals;

import com.sun.jna.Pointer;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.PointerByReference;

/**
 * Mock implementation that exposes generated by-reference values for easy mocking.
 * @author Sarge
 */
public class MockReferenceFactory implements ReferenceFactory {
	public final IntByReference integer = new IntByReference(1);
	public final PointerByReference ptr = new PointerByReference(new Pointer(2));
	private Pointer[] pointers = new Pointer[]{new Pointer(3)};

	@Override
	public IntByReference integer() {
		return integer;
	}

	@Override
	public PointerByReference pointer() {
		return ptr;
	}

	@Override
	public Pointer[] pointers(int num) {
		assertEquals(pointers.length, num, () -> String.format("Pointer array length mismatch: requested=%d actual=%d", num, pointers.length));
		return pointers;
	}

	// TODO
	public Pointer[] array(int num) {
		pointers = new Pointer[num];

		for(int n = 0; n < num; ++n) {
			pointers[n] = new Pointer(n);
		}

		return pointers;
	}
}
