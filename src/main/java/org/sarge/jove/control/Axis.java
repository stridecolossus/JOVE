package org.sarge.jove.control;

import static org.sarge.lib.util.Check.notNull;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.sarge.jove.control.Event.Source;
import org.sarge.jove.util.MathsUtil;

/**
 * An <i>axis</i> generates events for an axial controller such as the mouse wheel or a HOTAS gauge.
 * @author Sarge
 */
public interface Axis extends Source {
	/**
	 * Handler for an axis event.
	 */
	@FunctionalInterface
	interface Handler {
		/**
		 * Accepts an axis event.
		 * @param value Axis value
		 */
		void handle(float value);
	}

	/**
	 * An <i>axis event</i> describes an event generated by this axis.
	 */
	class AxisEvent implements Event {
		private final Axis axis;
		private final float value;

		/**
		 * Constructor.
		 * @param axis		Axis
		 * @param value 	Axis position
		 */
		public AxisEvent(Axis axis, float value) {
			this.axis = notNull(axis);
			this.value = value;
		}

		@Override
		public Object type() {
			return axis;
		}

		/**
		 * @return Axis value
		 */
		public float value() {
			return value;
		}

		@Override
		public boolean equals(Object obj) {
			return
					(obj == this) ||
					(obj instanceof AxisEvent that) &&
					(this.axis == that.axis) &&
					MathsUtil.isEqual(this.value, that.value);
		}

		@Override
		public String toString() {
			return new ToStringBuilder(this)
					.append(axis)
					.append(value)
					.build();
		}
	}
}
