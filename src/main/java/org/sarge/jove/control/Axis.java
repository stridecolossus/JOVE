package org.sarge.jove.control;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.sarge.jove.control.Axis.AxisEvent;
import org.sarge.jove.control.Event.Source;
import org.sarge.jove.control.Event.Type;
import org.sarge.jove.util.MathsUtil;
import org.sarge.lib.util.Check;

/**
 * An <i>axis</i> defines an event generated by an axial controller such as the mouse wheel or a controller gauge.
 * @author Sarge
 */
public record Axis(String name, Source source) implements Type<AxisEvent> {
	/**
	 * Convenience handler definition for the consumer of an axis event.
	 */
	public interface AxisHandler {
		/**
		 * Accepts an axis event.
		 * @param value Axis value
		 */
		void handle(float value);
	}

	/**
	 * Constructor.
	 * @param name			Axis name
	 * @param source		Source
	 */
	public Axis {
		Check.notEmpty(name);
		Check.notNull(source);
	}

	// TODO - min/max

	/**
	 * An <i>axis event</i> describes an event generated by this axis.
	 */
	public class AxisEvent implements Event {
		private final float value;

		public AxisEvent(float value) {
			this.value = value;
		}

		@Override
		public Type<AxisEvent> type() {
			return Axis.this;
		}

		/**
		 * @return Axis value
		 */
		public float value() {
			return value;
		}

		@Override
		public boolean equals(Object obj) {
			return
					(obj == this) ||
					(obj instanceof AxisEvent that) &&
					this.type().equals(that.type()) &&
					MathsUtil.isEqual(this.value, that.value);
		}

		@Override
		public String toString() {
			return new ToStringBuilder(this)
					.append(name)
					.append(value)
					.build();
		}
	}
}
