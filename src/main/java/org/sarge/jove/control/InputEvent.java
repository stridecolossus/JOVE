package org.sarge.jove.control;

import java.util.List;
import java.util.Set;
import java.util.function.Consumer;

/**
 * An <i>input event</i> describes an event generated by a device.
 * @author Sarge
 */
public interface InputEvent<T extends InputEvent.Type> {
	/**
	 * @return Type of this event
	 */
	T type();

	/**
	 * @return X coordinate
	 */
	float x();

	/**
	 * @return Y coordinate
	 */
	float y();

	/**
	 * An <i>event type</i> is the descriptor for an input event.
	 */
	interface Type {
		/**
		 * Delimiter for the string representation of an event.
		 */
		String DELIMITER = "-";

		/**
		 * @return Event name
		 */
		String name();
	}

	/**
	 * An <i>action</i> is a handler for an event.
	 * @param <T> Event type
	 */
	interface Action<T extends Type> extends Consumer<InputEvent<?>> {
		// Marker interface
	}

	/**
	 * An <i>input event source</i> defines a generator of input events.
	 * @param <T> Type of event
	 */
	interface Source<T extends Type> {
		/**
		 * @return Events generated by this source
		 */
		List<T> types();

		/**
		 * Enables generation of events.
		 * @param handler Event handler
		 */
		void enable(Consumer<InputEvent<?>> handler);

		/**
		 * Disables event generation.
		 */
		void disable();
	}

	/**
	 * A <i>device</i> is comprised of a group of event sources.
	 */
	interface Device {
		/**
		 * @return Device name
		 */
		String name();

		/**
		 * @return Event sources for this device
		 */
		Set<Source<?>> sources();
	}
}
