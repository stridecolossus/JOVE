package org.sarge.jove.particle;

import org.sarge.jove.geometry.Point;
import org.sarge.jove.geometry.Vector;

/**
 * A <i>vector factory</i> generates the initial movement vector of a {@link Particle}.
 * @author Sarge
 */
@FunctionalInterface
public interface VectorFactory {
	/**
	 * Generates the initial particle movement vector.
	 * @param pos Initial particle position
	 * @return Movement vector
	 */
	Vector vector(Point pos);

	/**
	 * Vector factory with the initial movement vector based on the initial position of the particle.
	 * This is generally intended for particles generated by a {@link SphericalPositionFactory}.
	 */
	VectorFactory POSITION = pos -> new Vector(pos);

	/**
	 * Randomised vector factory.
	 * @see Vector#random()
	 */
	VectorFactory RANDOM = ignored -> Vector.random();

	/**
	 * Creates a factory with a fixed initial vector.
	 * @param vec Movement vector
	 * @return Literal vector factory
	 */
	static VectorFactory literal(Vector vec) {
		return ignored -> vec;
	}

	/**
	 * Creates an adapter that scales a movement vector by the given velocity.
	 * @param factory		Underlying vector factory
	 * @param velocity		Particle velocity
	 * @return Scaled vector factory
	 */
	static VectorFactory scaled(VectorFactory factory, float velocity) {
		return pos -> factory.vector(pos).scale(velocity);
	}
}
